/*
 * Copyright to the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* -------------------------------------------------------
 * Give the files in the Rio distribution permissions
 * ------------------------------------------------------*/
grant codeBase "file:${RIO_HOME}${/}-" {
    permission java.io.FilePermission "<<ALL FILES>>","read,write,delete,execute";
    permission javax.management.MBeanPermission "*", "*";
    permission javax.management.MBeanServerPermission "*";
    permission javax.management.MBeanTrustPermission "*";
    permission java.lang.management.ManagementPermission "monitor";
    permission java.lang.management.ManagementPermission "control";
    permission com.sun.jini.thread.ThreadPoolPermission "getSystemThreadPool";
    permission com.sun.jini.thread.ThreadPoolPermission "getUserThreadPool";
    permission net.jini.export.ExportPermission "*";
    permission java.security.SecurityPermission "getDomainCombiner";
    permission java.security.SecurityPermission "createAccessControlContext";
    permission java.security.SecurityPermission "getPolicy";
    permission java.security.SecurityPermission "setPolicy";
    permission java.lang.reflect.ReflectPermission "suppressAccessChecks";
    permission java.util.PropertyPermission "*","read,write";
    permission groovy.security.GroovyCodeSourcePermission "groovy/script";
    permission java.net.NetPermission "specifyStreamHandler";

    permission java.lang.RuntimePermission "*";
};

/* -------------------------------------------------------
 * Give the Rio installed repository artifacts grants
 * ------------------------------------------------------*/
grant codeBase "file:${user.home}${/}.m2${/}repository${/}org${/}rioproject${/}-" {
    permission java.io.FilePermission "${java.home}${/}..${/}lib${/}tools.jar","read";
    permission java.io.FilePermission "${java.home}${/}lib${/}rt.jar","read";
    permission java.net.NetPermission "specifyStreamHandler";
};

/* -------------------------------------------------------
 * Give Drools repository artifacts grants
 * ------------------------------------------------------*/
grant codeBase "file:${user.home}${/}.m2${/}repository${/}org${/}rioproject${/}-" {
    permission java.io.FilePermission "${java.home}${/}lib${/}rt.jar","read";
};

/* -------------------------------------------------------
 * Give grant to groovy
 * ------------------------------------------------------*/
grant codeBase "file:groovy/script" {
    permission java.util.PropertyPermission "*","read";
};

/* -------------------------------------------------------
 * Give project artifacts in the local Maven repository permissions
 * ------------------------------------------------------*/
grant codeBase "file:${user.home}${/}.m2${/}repository${/}-" {
    /* Access to files in the Rio distribution */
    permission java.io.FilePermission "${RIO_HOME}${/}config${/}-","read";
    permission java.io.FilePermission "${RIO_HOME}${/}lib${/}-","read";
    permission java.io.FilePermission "${RIO_HOME}${/}logs${/}-","read";
    permission java.io.FilePermission "${user.home}${/}-","read,write";
    /* Access to temp directories */
    permission java.io.FilePermission "${java.io.tmpdir}${/}-","read,write";
    permission java.io.FilePermission "${/}tmp${/}-","read,write";
    /* Read and write properties */
    permission java.util.PropertyPermission "*","read,write";
    /* Run Groovy scripts */
    permission groovy.security.GroovyCodeSourcePermission "groovy/script";
    /* Allow artifact to register with JMX and create MBean servers */
    permission javax.management.MBeanPermission "*", "registerMBean";
    permission javax.management.MBeanPermission "*", "unregisterMBean";
    permission javax.management.MBeanServerPermission "createMBeanServer";
    permission javax.management.MBeanTrustPermission "register";
    /* Runtime grants */
    permission java.lang.RuntimePermission "*";
};

/* -------------------------------------------------------
 * Grants applicable for all
 * ------------------------------------------------------*/
grant {
    /* This will allow discovery across all groups. Specify a group to limit discovery */
    permission net.jini.discovery.DiscoveryPermission "*";

    permission java.net.NetPermission "getNetworkInformation";

    /* Multicast address for jini-announcement */
    permission java.net.SocketPermission "224.0.1.84","connect,accept,resolve";

    /* Multicast address for jini-request */
    permission java.net.SocketPermission "224.0.1.85","connect,accept,resolve";

    /* --------------------------------------------------------------------------------------
     * If you want to setup SocketPermission for known machines, uncomment out the following
     * and provide host names or ip addresses for each machine. Otherwise, if you want have
     * SocketPermission for all machines, keep the uncommented SocketPermission in place.
     *
     *  Note that the "listen" permission is only relevant if the host is local.
     * ------------------------------------------------------------------------------------*/

    /* If IPv6 is enabled, you may also need to declare a SocketPermission for your IPv6 address */
    //permission java.net.SocketPermission "[IPv6address]", "resolve";

    /* Socket permissions for local machine. Note that the "listen" permission is only relevant if the host is local. */
    //permission java.net.SocketPermission "local-machine-ip-address-or-hostname:1024-","connect,accept,listen";

    /* For each machine, create a Socket permission */
    //permission java.net.SocketPermission "remote-machine-ip-address-or-hostname:1024-","connect,accept";

    /* Socket permissions for any address */
    permission java.net.SocketPermission "*:*","connect,accept";
};